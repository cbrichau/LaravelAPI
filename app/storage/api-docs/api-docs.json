{
    "openapi": "3.0.0",
    "info": {
        "title": "API documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/sign-up": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Create a new user.",
                "operationId": "signUp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jason Bourne"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jason.bourne@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "DavidWebb"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "DavidWebb"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New user created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Jason Bourne"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "jason.bourne@example.com"
                                                    },
                                                    "basket": {
                                                        "type": "integer",
                                                        "example": "12"
                                                    },
                                                    "token": {
                                                        "type": "string",
                                                        "example": "1|XZmaKMKJJBt9IXJ6I5ob8Cf6yrfAJSPbqxyGvevM"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "properties": {
                                                "messages": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "example": [
                                                                "The name field is required."
                                                            ]
                                                        },
                                                        "email": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "example": [
                                                                "The email field is required.",
                                                                "The email must be a valid email address.",
                                                                "The email has already been taken."
                                                            ]
                                                        },
                                                        "password": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "example": [
                                                                "The password field is required."
                                                            ]
                                                        },
                                                        "password_confirmation": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "example": [
                                                                "The password confirmation field is required.",
                                                                "The password confirmation and password must match."
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/sign-in": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in an existing user.",
                "operationId": "signIn",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "james.bond@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "007"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "James Bond"
                                                    },
                                                    "token": {
                                                        "type": "string",
                                                        "example": "1|XZmaKMKJJBt9IXJ6I5ob8Cf6yrfAJSPbqxyGvevM"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "properties": {
                                                "messages": {
                                                    "properties": {
                                                        "email": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "example": [
                                                                "The email field is required.",
                                                                "The email must be a valid email address."
                                                            ]
                                                        },
                                                        "password": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "example": [
                                                                "The password field is required."
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Wrong email and/or password"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/baskets/{basketId}/products/{productId}": {
            "post": {
                "tags": [
                    "Basket"
                ],
                "summary": "Add a product to a basket.",
                "operationId": "addItem",
                "parameters": [
                    {
                        "name": "basketId",
                        "in": "path",
                        "description": "The basket's id",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The product's id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item added to basket.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                {
                                                    "NO_BASKET": "The basket doesn't exist or doesn't belong to the authenticated user."
                                                },
                                                {
                                                    "CLOSED_BASKET": "The basket is checked out, it can no longer be modified."
                                                },
                                                {
                                                    "BAD_PRODUCT": "The product does not exist."
                                                },
                                                {
                                                    "PRODUCT_IS_ALREADY_ADDED": "The basket already contains that product."
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Basket"
                ],
                "summary": "Remove a product from a basket.",
                "operationId": "removeItem",
                "parameters": [
                    {
                        "name": "basketId",
                        "in": "path",
                        "description": "The basket's id",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The product's id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item removed from basket.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                {
                                                    "NO_BASKET": "The basket doesn't exist or doesn't belong to the authenticated user."
                                                },
                                                {
                                                    "CLOSED_BASKET": "The basket is checked out, it can no longer be modified."
                                                },
                                                {
                                                    "BAD_PRODUCT": "The product does not exist."
                                                },
                                                {
                                                    "PRODUCT_IS_NOT_AVAILABLE": "The basket doesn't contain that product."
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/products/download-losses": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Download the losses as a .csv file",
                "operationId": "downloadLosses",
                "parameters": [
                    {
                        "name": "basket_id[is]",
                        "in": "query"
                    },
                    {
                        "name": "product_id[is]",
                        "in": "query"
                    },
                    {
                        "name": "add_to_basket_date[greaterThan]",
                        "in": "query"
                    },
                    {
                        "name": "add_to_basket_date[lowerThan]",
                        "in": "query"
                    },
                    {
                        "name": "removed_from_basket_date[greaterThan]",
                        "in": "query"
                    },
                    {
                        "name": "removed_from_basket_date[lowerThan]",
                        "in": "query"
                    },
                    {
                        "name": "product_price[greaterThan]",
                        "in": "query"
                    },
                    {
                        "name": "product_price[lowerThan]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Downloaded CSV file.",
                        "content": {
                            "text/csv": {}
                        }
                    },
                    "401": {
                        "description": "Access denied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "properties": {
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "Could not open file",
                                                        "Could not write in file"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}